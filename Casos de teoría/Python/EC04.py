# -*- coding: utf-8 -*-
"""EC04.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13kDAeXRC32vSRaQYd0mkZttMMTlul3U9

As seguintes reaccións en fase gasosa teñen lugar nun reactor de volume constante:
$$
A + B \Longleftrightarrow C + D
$$

$$
B + C \Longleftrightarrow X + Y
$$

$$
A + X \Longleftrightarrow Z
$$

O equilibrio das reacciones anteriores queda descrito por un sistema de ecuacións alxébricas no lineares. As relacións no lineares de equilibrio son as expresións da constante de equilibrio termodinámica pero tamén obtéñense a partires das ecuacións estequiométricas das reacciones:
$$
K_{C_1} = \frac {C_C C_D} {C_A C_B}
$$

$$
K_{C_2} = \frac {C_X C_Y} {C_B C_C}
$$

$$
K_{C_1} = \frac {C_Z} {C_A C_X}
$$

$$
C_A = C_{A_0} - C_D - C_Z
$$

$$
C_B = C_{B_0} - C_D - C_Y
$$

$$
C_C = C_D - C_Y
$$

$$
C_X = C_Y + C_Z
$$

onde $C_A$, $C_B$, $C_C$, $C_D$, $C_X$, $C_Y$ e $C_Z$ son as concentracións das diferentes especies no equilibrio, acadadas a partires das concentracións iniciais $C_{A_0}$ e $C_{B_0}$. As constantes de equilibrio $K_{C_1}$ , $K_{C_2}$ e $K_{C_3}$ teñen valores coñecidos.

Resolver este sistema de ecuacións cando $C_{A_0}$ = $C_{B_0}$ = 1.5 M, $K_{C_1}$ = 1.06, $K_{C_2}$ = 2.63 e $K_{C_3}$ = 5, empezando con tres conxuntos de valores estimados:

1. $C_D$ = $C_X$ = $C_Z$ = 0
2. $C_D$ = $C_X$ = $C_Z$  = 1
3. $C_D$ = $C_X$ = $C_Z$  = 10
"""

from scipy.optimize import fsolve

CA0 = 1.5
CB0 = 1.5
KC1 = 1.06
KC2 = 2.63
KC3 = 5.

def obxectivo(P):
    CA,CB,CC,CD,CX,CY,CZ = P # unpack the array in the argument
    z1 = CC*CD-KC1*CA*CB
    z2 = CX*CY-KC2*CB*CC
    z3 = CZ- KC3*CA*CX
    z4 = CA0 - CA - CD - CZ
    z5 = CB0 - CB - CD - CY
    z6 = CD - CY - CC
    z7 = CY - CX - CZ
    return [z1,z2,z3,z4,z5,z6,z7]

"""## Apartado 1"""

estimacion = [1.5,1.5,0.,0.,0.,0.,0.]
sol = fsolve(obxectivo,estimacion)

print('CA = {:6.4f}'.format(sol[0]))
print('CB = {:6.4f}'.format(sol[1]))
print('CC = {:6.4f}'.format(sol[2]))
print('CD = {:6.4f}'.format(sol[3]))
print('CX = {:6.4f}'.format(sol[4]))
print('CY = {:6.4f}'.format(sol[5]))
print('CZ = {:6.4f}'.format(sol[6]))

"""## Apartado 2"""

estimacion = [-0.5,-1.5,-1.,1.,1.,2.,1.]
sol = fsolve(obxectivo,estimacion)

print('CA = {:6.4f}'.format(sol[0]))
print('CB = {:6.4f}'.format(sol[1]))
print('CC = {:6.4f}'.format(sol[2]))
print('CD = {:6.4f}'.format(sol[3]))
print('CX = {:6.4f}'.format(sol[4]))
print('CY = {:6.4f}'.format(sol[5]))
print('CZ = {:6.4f}'.format(sol[6]))

CA0 = 1.5
CB0 = 1.5
estimacion = [-18.5,-28.5,-10.,10.,10.,20.,10.]
sol = fsolve(obxectivo,estimacion)

print('CA = {:6.4f}'.format(sol[0]))
print('CB = {:6.4f}'.format(sol[1]))
print('CC = {:6.4f}'.format(sol[2]))
print('CD = {:6.4f}'.format(sol[3]))
print('CX = {:6.4f}'.format(sol[4]))
print('CY = {:6.4f}'.format(sol[5]))
print('CZ = {:6.4f}'.format(sol[6]))

"""Como se pode observar, a solución que sae dos valores supostos no caso dos apartados **2** e **3** dan concentracións negativas."""

